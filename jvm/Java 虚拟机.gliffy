{"contentType":"application/gliffy+json","version":"1.1","metadata":{"title":"untitled","revision":0,"exportBorder":false},"embeddedResources":{"index":0,"resources":[]},"stage":{"objects":[{"x":630,"y":360,"rotation":0,"id":7,"uid":"com.gliffy.shape.basic.basic_v1.default.text","width":376,"height":128,"lockAspectRatio":false,"lockShape":false,"order":7,"graphic":{"type":"Text","Text":{"tid":null,"valign":"middle","overflow":"none","vposition":"none","hposition":"none","html":"<p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">标记 - 清除算法\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">首先标记所有需要回收的对象 ， 在标记完成后统一回收\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">复制算法\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">标记 - 整理算法\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">分代收集算法 ： 新生代  老年代</span></p>","paddingLeft":2,"paddingRight":2,"paddingBottom":2,"paddingTop":2}},"children":null,"linkMap":[]},{"x":630,"y":100,"rotation":0,"id":4,"uid":"com.gliffy.shape.basic.basic_v1.default.text","width":408,"height":128,"lockAspectRatio":false,"lockShape":false,"order":3,"graphic":{"type":"Text","Text":{"tid":null,"valign":"middle","overflow":"none","vposition":"none","hposition":"none","html":"<p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">当一个对象到 GC ROOTS 没有任何引用链相连时 ， 认为对象不可达 ， 可被垃圾回收 。\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">可作为 GC ROOTS 的对象\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">虚拟机栈（栈帧中的本地变量表）中引用的对象\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">方法区中类静态属性引用的对象\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">方法区中常量引用的对象</span></p>","paddingLeft":2,"paddingRight":2,"paddingBottom":2,"paddingTop":2}},"children":null,"linkMap":[]},{"x":60,"y":100,"rotation":0,"id":2,"uid":"com.gliffy.shape.basic.basic_v1.default.text","width":417,"height":336,"lockAspectRatio":false,"lockShape":false,"order":1,"graphic":{"type":"Text","Text":{"tid":null,"valign":"middle","overflow":"none","vposition":"none","hposition":"none","html":"<p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">java 虚拟机栈\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">是线程私有的 ，描述了 java 方法执行时的内存模型 。每个方法在执行时都会创建一个栈帧 ， 用于存储局部变量表 、操作数栈 、动态链接 、方法出口等信息。每一个方法从调用到执行完成的过程， 就对应着一个栈帧在虚拟机栈中入栈到出栈的过程 。\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">本地方法栈\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">堆\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">堆采用分代收集算法 。\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">细分为 ： 新生代 老年代\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">方法区\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">是各个线程共享的内存区域 ， 它用于存储已被虚拟机加载的类信息 、 常量 、静态变量 、即时编译器编译后的代码\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">运行时常量池\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">是方法区的一部分\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">存放编译期生成的各种字面量和符号引用\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; text-decoration: none; color: rgb(0, 0, 0);\">\n</span></p><p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; white-space: pre-wrap; line-height: 16.5px; color: rgb(0, 0, 0);\">直接内存</span></p>","paddingLeft":2,"paddingRight":2,"paddingBottom":2,"paddingTop":2}},"children":null,"linkMap":[]},{"x":70,"y":50,"rotation":0,"id":1,"uid":"com.gliffy.shape.basic.basic_v1.default.text","width":140,"height":16,"lockAspectRatio":false,"lockShape":false,"order":0,"graphic":{"type":"Text","Text":{"tid":null,"valign":"middle","overflow":"none","vposition":"none","hposition":"none","html":"<p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; color: rgb(255, 0, 0); white-space: pre-wrap; line-height: 16.5px;\">虚拟机内存区域划分</span></p>","paddingLeft":2,"paddingRight":2,"paddingBottom":2,"paddingTop":2}},"children":null,"linkMap":[]},{"x":650,"y":50,"rotation":0,"id":3,"uid":"com.gliffy.shape.basic.basic_v1.default.text","width":140,"height":16,"lockAspectRatio":false,"lockShape":false,"order":2,"graphic":{"type":"Text","Text":{"tid":null,"valign":"middle","overflow":"none","vposition":"none","hposition":"none","html":"<p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; color: rgb(255, 0, 0); white-space: pre-wrap; line-height: 16.5px;\">可达性分析算法</span></p>","paddingLeft":2,"paddingRight":2,"paddingBottom":2,"paddingTop":2}},"children":null,"linkMap":[]},{"x":652,"y":300,"rotation":0,"id":6,"uid":"com.gliffy.shape.basic.basic_v1.default.text","width":140,"height":16,"lockAspectRatio":false,"lockShape":false,"order":4,"graphic":{"type":"Text","Text":{"tid":null,"valign":"middle","overflow":"none","vposition":"none","hposition":"none","html":"<p style=\"text-align:left;\"><span style=\"font-size: 14px; font-family: Arial; color: rgb(255, 0, 0); white-space: pre-wrap; line-height: 16.5px;\">垃圾收集算法</span></p>","paddingLeft":2,"paddingRight":2,"paddingBottom":2,"paddingTop":2}},"children":null,"linkMap":[]}],"background":"#FFFFFF","width":1036,"height":490,"maxWidth":5000,"maxHeight":5000,"nodeIndex":8,"autoFit":true,"exportBorder":false,"gridOn":true,"snapToGrid":true,"drawingGuidesOn":true,"pageBreaksOn":false,"printGridOn":false,"printPaper":"LETTER","printShrinkToFit":false,"printPortrait":true,"shapeStyles":{},"lineStyles":{},"textStyles":{},"themeData":null}}